// <auto-generated />
using System;
using BlogPost.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlogPost.Migrations.Application
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20241123151235_AddConstraints")]
    partial class AddConstraints
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlogPost.Models.Post", b =>
                {
                    b.Property<Guid>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ThumbnailImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PostId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Post");
                });

            modelBuilder.Entity("BlogPost.Models.Topic", b =>
                {
                    b.Property<Guid>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TopicId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Topic");

                    b.HasData(
                        new
                        {
                            TopicId = new Guid("2a630afa-3f9c-4363-a884-b3822e010133"),
                            Name = "Tech"
                        },
                        new
                        {
                            TopicId = new Guid("0cc0f4e3-281b-4331-9e64-86e03243e682"),
                            Name = "Science"
                        },
                        new
                        {
                            TopicId = new Guid("6e9735f7-6c7e-48b1-bafd-21d786ed83d4"),
                            Name = "Health"
                        },
                        new
                        {
                            TopicId = new Guid("57d3f271-9c64-4bf0-9306-b63b6e22db5e"),
                            Name = "Religion"
                        },
                        new
                        {
                            TopicId = new Guid("776ff9ad-f168-4552-892d-fb75c6958c3c"),
                            Name = "Life"
                        },
                        new
                        {
                            TopicId = new Guid("60266022-840e-48cd-a425-01c22950e8b5"),
                            Name = "Natural"
                        });
                });

            modelBuilder.Entity("BlogPost.Models.TopicsPosts", b =>
                {
                    b.Property<Guid>("TopicsPostsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TopicId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TopicsPostsId");

                    b.HasIndex("TopicId");

                    b.HasIndex("PostId", "TopicId")
                        .IsUnique();

                    b.ToTable("TopicsPosts");
                });

            modelBuilder.Entity("BlogPost.Models.TopicsPosts", b =>
                {
                    b.HasOne("BlogPost.Models.Post", "Post")
                        .WithMany("TopicsPosts")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlogPost.Models.Topic", "Topic")
                        .WithMany("TopicsPosts")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("BlogPost.Models.Post", b =>
                {
                    b.Navigation("TopicsPosts");
                });

            modelBuilder.Entity("BlogPost.Models.Topic", b =>
                {
                    b.Navigation("TopicsPosts");
                });
#pragma warning restore 612, 618
        }
    }
}
